Index: hostapd-2023-09-08-e5ccbfc6/src/ap/sta_info.c
===================================================================
--- hostapd-2023-09-08-e5ccbfc6.orig/src/ap/sta_info.c	2023-11-06 11:29:57.627970687 +0200
+++ hostapd-2023-09-08-e5ccbfc6/src/ap/sta_info.c	2023-11-06 11:29:57.623970708 +0200
@@ -1299,6 +1299,7 @@
 {
 	const u8 *dev_addr = NULL;
 	char buf[100];
+	char mac[18] = { 0 };
 #ifdef CONFIG_P2P
 	u8 addr[ETH_ALEN];
 	u8 ip_addr_buf[4];
@@ -1345,6 +1346,8 @@
 		hapd->sta_authorized_cb(hapd->sta_authorized_cb_ctx,
 					sta->addr, authorized, dev_addr);
 
+	sprintf(mac, MACSTR, MAC2STR(sta->addr));
+
 	if (authorized) {
 		static const char * const auth_algs[] = {
 			[WLAN_AUTH_OPEN] = "open",
@@ -1412,6 +1415,8 @@
 					  AP_STA_CONNECTED "%s%s%s%s%s",
 					  buf, ip_addr, keyid_buf,
 					  dpp_pkhash_buf, alg_buf);
+
+		hostapd_ubus_insert_wifi_log(mac, 1);
 	} else {
 		wpa_msg(hapd->msg_ctx, MSG_INFO, AP_STA_DISCONNECTED "%s", buf);
 		hostapd_ubus_notify(hapd, "disassoc", sta->addr);
@@ -1420,6 +1425,8 @@
 		    hapd->msg_ctx_parent != hapd->msg_ctx)
 			wpa_msg_no_global(hapd->msg_ctx_parent, MSG_INFO,
 					  AP_STA_DISCONNECTED "%s", buf);
+
+		hostapd_ubus_insert_wifi_log(mac, 0);
 	}
 
 #ifdef CONFIG_FST
Index: hostapd-2023-09-08-e5ccbfc6/src/ap/ubus.c
===================================================================
--- hostapd-2023-09-08-e5ccbfc6.orig/src/ap/ubus.c	2023-11-06 11:29:57.627970687 +0200
+++ hostapd-2023-09-08-e5ccbfc6/src/ap/ubus.c	2023-11-06 11:29:57.623970708 +0200
@@ -1946,6 +1946,32 @@
 	ubus_notify(ctx, &hapd->ubus.obj, "beacon-report", b.head, -1);
 }
 
+void hostapd_ubus_insert_wifi_log(char *mac, int ident)
+{
+	struct events_log new_task = { 0 };
+	char cmd[45]		   = { 0 };
+	int i			   = 0;
+
+	while (mac[i]) {
+		mac[i] = toupper(mac[i]);
+		i++;
+	}
+
+	if (ident) {
+		sprintf(cmd, "WiFi client connected: %s", mac);
+	} else {
+		sprintf(cmd, "WiFi client disconnected: %s", mac);
+	}
+
+	new_task.table	  = LLOG_CONNECTIONS;
+	new_task.sender	  = "WiFi";
+	new_task.priority = EVENTLOG_NOTICE;
+	new_task.db_flag  = 1;
+	new_task.text	  = cmd;
+
+	llog_add_task(ctx, &new_task);
+}
+
 void hostapd_ubus_notify_radar_detected(struct hostapd_iface *iface, int frequency,
 					int chan_width, int cf1, int cf2)
 {
Index: hostapd-2023-09-08-e5ccbfc6/src/ap/ubus.h
===================================================================
--- hostapd-2023-09-08-e5ccbfc6.orig/src/ap/ubus.h	2023-11-06 11:29:57.627970687 +0200
+++ hostapd-2023-09-08-e5ccbfc6/src/ap/ubus.h	2023-11-06 11:29:57.627970687 +0200
@@ -32,6 +32,8 @@
 
 #include <libubox/avl.h>
 #include <libubus.h>
+#include <liblog.h>
+#include <ctype.h>
 
 struct hostapd_ubus_bss {
 	struct ubus_object obj;
@@ -60,6 +62,7 @@
 	struct hostapd_data *hapd, const u8 *addr, u8 dialog_token, u8 status_code,
 	u8 bss_termination_delay, const u8 *target_bssid,
 	const u8 *candidate_list, u16 candidate_list_len);
+void hostapd_ubus_insert_wifi_log(char *mac, int ident);
 void hostapd_ubus_add(struct hapd_interfaces *interfaces);
 void hostapd_ubus_free(struct hapd_interfaces *interfaces);
 int hostapd_ubus_notify_bss_transition_query(
