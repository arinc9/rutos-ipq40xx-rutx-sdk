#!/bin/sh

. /lib/functions.sh

relayd_section=""
found_enabled=0

find_relayd_interface() {
	local section="$1"
	local proto
	local disabled

	[ -n "$relayd_section" ] && [ "$found_enabled" -eq 1 ] && return

	proto="$(uci_get network "$section" "proto")"
	[ "$proto" != "relay" ] && return

	disabled="$(uci_get network "$section" "disabled" "0")"

	if [ "$found_enabled" -eq 0 ] && [ "$disabled" = "0" ]; then
		relayd_section="$section"
		found_enabled=1
	fi

	if [ -z "$relayd_section" ]; then
		relayd_section="$section"
	fi
}

move_relayd_to_separate_config() {
	local disabled
	local network
	local lan_mark

	disabled="$(uci_get network "$relayd_section" "disabled" "0")"
	network="$(uci_get network "$relayd_section" "network")"
	lan_mark="$(uci_get network "$relayd_section" "lan_mark")"

	if [ "$disabled" = "0" ]; then
		uci_set "relayd" "relayd" "enabled" "1"
	fi
	uci_set "relayd" "relayd" "network" "$network"
	uci_set "relayd" "relayd" "lan_mark" "$lan_mark"

	uci_commit "relayd"
}

delete_relayd_section() {
	local section="$1"

	proto="$(uci_get network "$section" "proto")"
	[ "$proto" != "relay" ] && return
	
	uci_remove "network" "$section"
}

config_load "network"
config_foreach find_relayd_interface "interface"
[ -n "$relayd_section" ] && move_relayd_to_separate_config
config_foreach delete_relayd_section "interface"
uci_commit "network"
