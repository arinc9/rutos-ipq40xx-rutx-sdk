#!/bin/sh /etc/rc.common

START=69
STOP=69
USE_PROCD=1

PROG_PATH=/greengrass/ggc/core
PROG=greengrass
CONFIG_FILE=/greengrass/config/config.json

POSTFIX=".bak"

is_enabled() {
	local enabled

	config_load "$PROG"
	config_get enabled general "enabled" "0"

	[ "$enabled" -eq 1 ] && [ -f "$CONFIG_FILE" ]
}

backup() {
	local file="$1"
	[ -f "$file" ] || return

	cp "$file" "${file}${POSTFIX}"
}

restore() {
	local file="$1"
	[ -f "$file" ] || ! [ -f "${file}${POSTFIX}" ] && {
		echo "No need to restore"
		return
	}

	mv "${file}${POSTFIX}" "$file"
}

link_std_fds() {
	[ -e /dev/stdin ] || ln -s /proc/self/fd/0 /dev/stdin
	[ -e /dev/stdout ] || ln -s /proc/self/fd/1 /dev/stdout
	[ -e /dev/stderr ] || ln -s /proc/self/fd/2 /dev/stderr
}

remount_cgroups() {
	local cgroup_info="$(mount | grep cgroup)"
	echo "$cgroup_info" | grep device | grep -q memory && return

	local cgroup_path="$(echo "$cgroup_info" | awk '{print $3}' || echo "/sys/fs/cgroup")"
	umount "$cgroup_path"
	mount -t cgroup -o all cgroup2 "$cgroup_path"
}

start_service() {
	is_enabled || return

	backup "$CONFIG_FILE"

	link_std_fds
	remount_cgroups

	procd_open_instance
	procd_set_param command $PROG_PATH/${PROG}d start

	procd_set_param file /etc/config/$PROG
	procd_set_param file $CONFIG_FILE
	procd_set_param stdout 1
	procd_set_param stderr 1
	procd_close_instance
}

stop_service() {
	local err="$(restore "$CONFIG_FILE")"

	$PROG_PATH/${PROG}d stop

	[ -z "$err" ] && rm "$CONFIG_FILE"
}

reload_service() {
	stop
	start
}

service_triggers() {
	procd_add_reload_trigger "$PROG"
}
