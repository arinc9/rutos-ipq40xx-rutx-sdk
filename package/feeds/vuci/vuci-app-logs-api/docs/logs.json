{
  "openapi": "3.0.0",
  "info": {
    "title": "Logs",
    "version": "1.0.0",
    "description": "Events Logs API documentation"
  },
  "tags": [],
  "paths": {
    "/events_log/config": {
      "get": {
        "tags": [
          "General"
        ],
        "summary": "Returns events from all log groups",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200events_log"
          },
          "422": {
            "$ref": "#/components/responses/422response"
          }
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            },
            "description": "Limit number of items returned"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            },
            "description": "Number of items to skip from the beginning"
          },
          {
            "name": "sortby",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Field to sort by. One of the following values [id, event, event_type, date]"
          },
          {
            "name": "orderby",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Specify sorting order. One of the following values [asc, desc]"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search in every field"
          }
        ]
      },
      "parameters": [
        {
          "name": "limit",
          "in": "query",
          "required": false,
          "schema": {
            "type": "number"
          },
          "description": "Limit number of items returned"
        },
        {
          "name": "offset",
          "in": "query",
          "required": false,
          "schema": {
            "type": "number"
          },
          "description": "Number of items to skip from the beginning"
        },
        {
          "name": "sortby",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string"
          },
          "description": "Field to sort by. One of the following values [id, event, event_type, date]"
        },
        {
          "name": "orderby",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string"
          },
          "description": "Specify sorting order. One of the following values [asc, desc]"
        },
        {
          "name": "search",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string"
          },
          "description": "Search in every field"
        }
      ],
      "x-web": {
        "menu": [
          "System",
          "Maintenance",
          "Events Log"
        ]
      }
    },
    "/events_log/config/{event_type}": {
      "get": {
        "tags": [
          "General"
        ],
        "summary": "Returns events from specified log group",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200events_log"
          },
          "422": {
            "$ref": "#/components/responses/422response"
          }
        },
        "parameters": [
          {
            "name": "event_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Event log type (Available types: [system, events, connections, network])"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            },
            "description": "Limit number of items returned"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            },
            "description": "Number of items to skip from the beginning"
          },
          {
            "name": "sortby",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Field to sort by. One of the following values [id, event, event_type, date]"
          },
          {
            "name": "orderby",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Specify sorting order. One of the following values [asc, desc]"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search in every field"
          }
        ]
      },
      "parameters": [
        {
          "name": "event_type",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Event log type (Available types: [system, events, connections, network])"
        },
        {
          "name": "limit",
          "in": "query",
          "required": false,
          "schema": {
            "type": "number"
          },
          "description": "Limit number of items returned"
        },
        {
          "name": "offset",
          "in": "query",
          "required": false,
          "schema": {
            "type": "number"
          },
          "description": "Number of items to skip from the beginning"
        },
        {
          "name": "sortby",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string"
          },
          "description": "Field to sort by. One of the following values [id, event, event_type, date]"
        },
        {
          "name": "orderby",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string"
          },
          "description": "Specify sorting order. One of the following values [asc, desc]"
        },
        {
          "name": "search",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string"
          },
          "description": "Search in every field"
        }
      ],
      "x-web": {
        "menu": [
          "System",
          "Maintenance",
          "Events Log"
        ]
      }
    }
  },
  "components": {
    "responses": {
      "200events_log": {
        "description": "Returns events log",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Operation status"
                },
                "data": {
                  "type": "array",
                  "description": "Array of events",
                  "items": {
                    "$ref": "#/components/schemas/events_log_options"
                  }
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "events_log_options": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID of a log."
          },
          "date": {
            "type": "string",
            "description": "Date and time of the event."
          },
          "event_type": {
            "type": "string",
            "description": "Sender."
          },
          "event": {
            "type": "string",
            "description": "Event description."
          }
        }
      }
    }
  }
}