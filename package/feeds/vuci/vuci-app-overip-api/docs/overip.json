{
  "openapi": "3.0.0",
  "paths": {
    "/overip/config": {
      "get": {
        "tags": [
          "OverIP"
        ],
        "summary": "Returns all OverIP configurations",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200OveripMulti"
          }
        }
      },
      "post": {
        "tags": [
          "OverIP"
        ],
        "summary": "Creates OverIP configuration",
        "responses": {
          "201": {
            "$ref": "#/components/responses/200Overip"
          },
          "422": {
            "$ref": "#/components/responses/422response"
          }
        },
        "requestBody": {
          "description": "Parameter section",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/overip_options_edit"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "OverIP"
        ],
        "summary": "Updates specified OverIP configurations",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200OveripMulti"
          },
          "404": {
            "$ref": "#/components/responses/404response"
          },
          "422": {
            "$ref": "#/components/responses/422response"
          }
        },
        "requestBody": {
          "description": "Parameter section",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "description": "Array of section objects",
                    "items": {
                      "$ref": "#/components/schemas/overip_options_all_edit"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OverIP"
        ],
        "summary": "Deletes specified OverIP configurations",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200deleted_multi"
          },
          "404": {
            "$ref": "#/components/responses/404response"
          }
        },
        "requestBody": {
          "description": "Parameter section",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "description": "Array of section objects",
                    "items": {
                      "type": "string",
                      "description": "Section id"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "x-web": {
        "name": "OverIP",
        "menu": [
          "Services",
          "OverIP",
          "OverIP"
        ],
        "hw_tags": {
          "serial_mbus": true
        }
      }
    },
    "/overip/config/{id}": {
      "get": {
        "tags": [
          "OverIP"
        ],
        "summary": "Returns the specified OverIP configuration",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Overip"
          },
          "404": {
            "$ref": "#/components/responses/404response"
          }
        }
      },
      "put": {
        "tags": [
          "OverIP"
        ],
        "summary": "Updates the specified OverIP configuration",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Overip"
          },
          "404": {
            "$ref": "#/components/responses/404response"
          },
          "422": {
            "$ref": "#/components/responses/422response"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "OverIP Configuration identifier (ID)"
          }
        ],
        "requestBody": {
          "description": "Parameter section",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/overip_options_edit"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OverIP"
        ],
        "summary": "Deletes the specified OverIP configuration",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200deleted"
          },
          "404": {
            "$ref": "#/components/responses/404response"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "OverIP Configuration identifier (ID)"
          }
        ]
      },
      "x-web": {
        "name": "OverIP",
        "menu": [
          "Services",
          "OverIP",
          "OverIP"
        ],
        "hw_tags": {
          "serial_mbus": true
        }
      }
    }
  },
  "components": {
    "responses": {
      "200Overip": {
        "description": "Returns configuration",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Operation status"
                },
                "data": {
                  "$ref": "#/components/schemas/overip_options_all_get"
                }
              }
            }
          }
        }
      },
      "200OveripMulti": {
        "description": "Returns configurations",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Operation status"
                },
                "data": {
                  "type": "array",
                  "description": "Array of section objects",
                  "items": {
                    "$ref": "#/components/schemas/overip_options_all_get"
                  }
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "overip_single_options": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 200,
            "description": "Name of serial device",
            "x-web": {
              "pretty": "Name",
              "input-type": "input",
              "unique": true,
              "group": "Device configuration"
            }
          },
          "enabled": {
            "type": "string",
            "description": "Enable/Disable OverIP configuration.",
            "format": "is_bool",
            "enum": [
              "0",
              "1"
            ],
            "x-web": {
              "pretty": "Enable",
              "input-type": "switch",
              "group": "Device configuration"
            }
          },
          "device": {
            "type": "string",
            "description": "Which serial port will be used for serial communication",
            "x-web": {
              "pretty": "Device",
              "input-type": "select",
              "group": "Device configuration",
              "enum-pretty": {
                "/dev/rs232": "rs232",
                "/dev/rs485": "rs485",
                "/dev/rsconsole": "Console"
              },
              "enum-depends": [
                {
                  "hw_tags": {
                    "rs232": true,
                    "rs485": true
                  },
                  "values": [
                    "/dev/rs232",
                    "/dev/rs485"
                  ]
                },
                {
                  "hw_tags": {
                    "rs232": true,
                    "rs485": false
                  },
                  "values": [
                    "/dev/rs232"
                  ]
                },
                {
                  "hw_tags": {
                    "rs232": false,
                    "rs485": true
                  },
                  "values": [
                    "/dev/rs485"
                  ]
                },
                {
                  "hw_tags": {
                    "console": true
                  },
                  "values": [
                    "/dev/rsconsole"
                  ]
                },
                {
                  "hw_tags": {
                    "baudrate_38400": true
                  },
                  "values": [
                    "/dev/mbus"
                  ]
                }
              ]
            }
          },
          "baudrate": {
            "type": "string",
            "enum": [
              "300",
              "1200",
              "2400",
              "4800",
              "9600",
              "19200",
              "38400",
              "57600",
              "115200"
            ],
            "default": "9600",
            "description": "Select supported baud rate",
            "x-web": {
              "pretty": "Baud rate",
              "input-type": "select",
              "group": "Device configuration",
              "enum-depends": [
                {
                  "depends": {
                    "device": [
                      "/dev/rs232",
                      "/dev/rsconsole"
                    ]
                  },
                  "hw_tags": {
                    "baudrate_115200": true
                  },
                  "values": [
                    "300",
                    "600",
                    "1200",
                    "2400",
                    "4800",
                    "9600",
                    "19200",
                    "38400",
                    "57600",
                    "115200"
                  ]
                },
                {
                  "depends": {
                    "device": "/dev/rs485"
                  },
                  "hw_tags": {
                    "baudrate_3000000": true
                  },
                  "values": [
                    "300",
                    "600",
                    "1200",
                    "2400",
                    "4800",
                    "9600",
                    "19200",
                    "38400",
                    "57600",
                    "115200",
                    "230400",
                    "460800",
                    "921600",
                    "1000000",
                    "3000000"
                  ]
                },
                {
                  "depends": {
                    "device": "/dev/rs485"
                  },
                  "hw_tags": {
                    "baudrate_230400": true
                  },
                  "values": [
                    "300",
                    "600",
                    "1200",
                    "2400",
                    "4800",
                    "9600",
                    "19200",
                    "38400",
                    "57600",
                    "115200",
                    "230400"
                  ]
                },
                {
                  "depends": {
                    "device": "/dev/mbus"
                  },
                  "values": [
                    "300",
                    "600",
                    "1200",
                    "2400",
                    "4800",
                    "9600",
                    "19200",
                    "38400"
                  ]
                }
              ]
            }
          },
          "databits": {
            "type": "string",
            "enum": [
              "5",
              "6",
              "7",
              "8"
            ],
            "default": "8",
            "description": "Select how many bits will be used for character",
            "x-web": {
              "pretty": "Data bits",
              "input-type": "select",
              "group": "Device configuration",
              "enum-depends": [
                {
                  "depends": {
                    "device": "/dev/rs232"
                  },
                  "hw_tags": {
                    "databits_full": true
                  },
                  "values": [
                    "5",
                    "6",
                    "7",
                    "8"
                  ]
                },
                {
                  "depends": {
                    "device": [
                      "/dev/rs232",
                      "/dev/rsconsole"
                    ]
                  },
                  "hw_tags": {
                    "databits_half": true
                  },
                  "values": [
                    "7",
                    "8"
                  ]
                },
                {
                  "depends": {
                    "device": "/dev/rs485"
                  },
                  "hw_tags": {
                    "databits_8": true
                  },
                  "values": [
                    "8"
                  ]
                },
                {
                  "depends": {
                    "device": "/dev/rs485"
                  },
                  "hw_tags": {
                    "databits_full": true
                  },
                  "values": [
                    "5",
                    "6",
                    "7",
                    "8"
                  ]
                },
                {
                  "depends": {
                    "device": "/dev/rs485"
                  },
                  "hw_tags": {
                    "databits_half": true
                  },
                  "values": [
                    "7",
                    "8"
                  ]
                },
                {
                  "depends": {
                    "device": "/dev/mbus"
                  },
                  "values": [
                    "5",
                    "6",
                    "7",
                    "8"
                  ]
                }
              ]
            }
          },
          "stopbits": {
            "type": "string",
            "enum": [
              "1",
              "2"
            ],
            "default": "1",
            "description": "Select how many stop bits will be used to detect the end of character",
            "x-web": {
              "pretty": "Stop bits",
              "input-type": "select",
              "group": "Device configuration",
              "enum-depends": [
                {
                  "depends": {
                    "device": [
                      "/dev/rs232",
                      "/dev/rsconsole"
                    ]
                  },
                  "hw_tags": {
                    "stopbits_2": true
                  },
                  "values": [
                    "1",
                    "2"
                  ]
                },
                {
                  "depends": {
                    "device": "/dev/rs485"
                  },
                  "hw_tags": {
                    "stopbits_1": true
                  },
                  "values": [
                    "1"
                  ]
                },
                {
                  "depends": {
                    "device": "/dev/rs485"
                  },
                  "hw_tags": {
                    "stopbits_2": true
                  },
                  "values": [
                    "1",
                    "2"
                  ]
                },
                {
                  "depends": {
                    "device": "/dev/mbus"
                  },
                  "values": [
                    "1",
                    "2"
                  ]
                }
              ]
            }
          },
          "parity": {
            "type": "string",
            "enum": [
              "odd",
              "even",
              "none"
            ],
            "description": "Select what kind of parity bit to use for error detection",
            "x-web": {
              "pretty": "Parity",
              "enum-pretty": {
                "odd": "Odd",
                "even": "Even",
                "mark": "Mark",
                "space": "Space",
                "none": "None"
              },
              "input-type": "select",
              "group": "Device configuration",
              "enum-depends": [
                {
                  "depends": {
                    "device": [
                      "/dev/rs232",
                      "/dev/rsconsole"
                    ]
                  },
                  "hw_tags": {
                    "parity_max": true
                  },
                  "values": [
                    "even",
                    "odd",
                    "mark",
                    "space",
                    "none"
                  ]
                },
                {
                  "depends": {
                    "device": "/dev/rs485"
                  },
                  "hw_tags": {
                    "parity_min": true
                  },
                  "values": [
                    "even",
                    "odd",
                    "none"
                  ]
                },
                {
                  "depends": {
                    "device": "/dev/rs485"
                  },
                  "hw_tags": {
                    "parity_max": true
                  },
                  "values": [
                    "even",
                    "odd",
                    "mark",
                    "space",
                    "none"
                  ]
                },
                {
                  "depends": {
                    "device": "/dev/mbus"
                  },
                  "values": [
                    "even",
                    "odd",
                    "mark",
                    "space",
                    "none"
                  ]
                }
              ]
            }
          },
          "flowcontrol": {
            "type": "string",
            "enum": [
              "none",
              "xon/xoff",
              "rts/cts"
            ],
            "description": "Select what kind of characters to use for flow control",
            "x-web": {
              "pretty": "Flow control",
              "enum-pretty": {
                "none": "None",
                "rts/cts": "RTS/CTS",
                "xon/xoff": "Xon/Xoff"
              },
              "input-type": "select",
              "group": "Device configuration",
              "enum-depends": [
                {
                  "depends": {
                    "device": [
                      "/dev/rs232",
                      "/dev/rsconsole"
                    ]
                  },
                  "hw_tags": {
                    "flowcontrol_3": true
                  },
                  "values": [
                    "rts/cts",
                    "xon/xoff",
                    "none"
                  ]
                },
                {
                  "depends": {
                    "device": "/dev/rs485"
                  },
                  "hw_tags": {
                    "flowcontrol_none": true
                  },
                  "values": [
                    "none"
                  ]
                },
                {
                  "depends": {
                    "device": "/dev/rs485",
                    "full_duplex_enabled": "1"
                  },
                  "hw_tags": {
                    "flowcontrol_2": true
                  },
                  "values": [
                    "none",
                    "xon/xoff"
                  ]
                },
                {
                  "depends": {
                    "device": "/dev/rs485",
                    "full_duplex_enabled": "0"
                  },
                  "hw_tags": {
                    "flowcontrol_none": true
                  },
                  "values": [
                    "none"
                  ]
                },
                {
                  "depends": {
                    "device": "/dev/mbus"
                  },
                  "values": [
                    "none",
                    "xon/xoff"
                  ]
                }
              ]
            }
          },
          "full_duplex_enabled": {
            "type": "string",
            "format": "is_bool",
            "example": "0",
            "enum": [
              "0",
              "1"
            ],
            "description": "Check to enable rs485 Full-Duplex",
            "x-web": {
              "pretty": "Full duplex",
              "input-type": "switch",
              "group": "Device configuration",
              "depends": [
                {
                  "device": "/dev/rs485"
                }
              ]
            }
          },
          "protocol": {
            "type": "string",
            "description": "Select which protocol to use for data transmission",
            "format": "is_bool",
            "enum": [
              "0",
              "1"
            ],
            "x-web": {
              "pretty": "Protocol",
              "input-type": "select",
              "group": "General Over IP configuration",
              "enum-pretty": {
                "0": "TCP",
                "1": "UDP"
              },
              "enum-depends": [
                {
                  "depends": {
                    "mode": [
                      "server",
                      "client"
                    ]
                  },
                  "values": [
                    "0",
                    "1"
                  ]
                },
                {
                  "depends": {
                    "mode": "bidirect"
                  },
                  "values": [
                    "0"
                  ]
                }
              ]
            }
          },
          "raw": {
            "type": "string",
            "description": "Enable to transmit all data transparently.",
            "format": "is_bool",
            "enum": [
              "0",
              "1"
            ],
            "x-web": {
              "pretty": "Raw mode",
              "input-type": "switch",
              "group": "Advanced Over IP configuration"
            }
          },
          "mode": {
            "type": "string",
            "description": "Select mode for serial device.",
            "enum": [
              "server",
              "client",
              "bidirect",
              "client_server"
            ],
            "x-web": {
              "pretty": "Mode",
              "input-type": "select",
              "group": "General Over IP configuration",
              "enum-pretty": {
                "server": "Server",
                "client": "Client",
                "bidirect": "Bidirect (legacy mode, not recommended)",
                "client_server": "Client + server"
              }
            }
          },
          "no_leading_zeros": {
            "type": "string",
            "description": "Check this to skip hex first zeros.",
            "format": "is_bool",
            "enum": [
              "0",
              "1"
            ],
            "x-web": {
              "pretty": "No leading zeros",
              "input-type": "switch",
              "group": "Advanced Over IP configuration"
            }
          },
          "port_connect": {
            "type": "string",
            "description": "Specify port number for the connectivity establishment.",
            "format": "port",
            "x-web": {
              "pretty": "Port",
              "input-type": "input",
              "group": "Over IP configuration",
              "depends": [
                {
                  "mode": [
                    "client",
                    "bidirect"
                  ]
                }
              ]
            }
          },
          "timeout": {
            "type": "string",
            "description": "Disconnect client if connection is not active.",
            "format": "irange(0, 36000)",
            "default": "300",
            "x-web": {
              "pretty": "Inactivity timeout",
              "input-type": "input",
              "group": "Advanced Over IP configuration",
              "depends": [
                {
                  "mode": [
                    "client",
                    "server",
                    "client_server"
                  ],
                  "protocol": "0"
                }
              ]
            }
          },
          "read_duration": {
            "type": "string",
            "description": "Specifies the maximum milliseconds to wait for serial data",
            "format": "irange(0, 1000)",
            "default": "5",
            "x-web": {
              "pretty": "Serial timeout",
              "input-type": "input",
              "group": "Advanced Over IP configuration"
            }
          },
          "max_clients": {
            "type": "string",
            "description": "Specify (1-32) how many clients are allowed to connect simultaneously",
            "format": "irange(1, 32)",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "18",
              "19",
              "20",
              "21",
              "22",
              "23",
              "24",
              "25",
              "26",
              "27",
              "28",
              "29",
              "30",
              "31",
              "32"
            ],
            "default": "32",
            "x-web": {
              "pretty": "Max clients",
              "input-type": "select",
              "group": "Advanced Over IP configuration",
              "depends": [
                {
                  "mode": [
                    "server",
                    "bidirect",
                    "client_server"
                  ]
                }
              ]
            }
          },
          "close_connections": {
            "type": "string",
            "description": "Close TCP connections everytime data is sent or received (might result in serial data loss)",
            "format": "is_bool",
            "enum": [
              "0",
              "1"
            ],
            "x-web": {
              "pretty": "Close connections",
              "input-type": "switch",
              "group": "Over IP configuration",
              "depends": [
                {
                  "protocol": "0",
                  "mode": [
                    "client",
                    "server",
                    "client_server"
                  ]
                }
              ]
            }
          },
          "connect_on_data": {
            "type": "string",
            "description": "Only attempt to connect to server when data is received from serial device",
            "format": "is_bool",
            "enum": [
              "0",
              "1"
            ],
            "x-web": {
              "pretty": "Connect on data",
              "input-type": "switch",
              "group": "Over IP configuration",
              "depends": [
                {
                  "protocol": "0",
                  "mode": [
                    "client",
                    "client_server"
                  ],
                  "close_connections": "0"
                }
              ]
            }
          },
          "max_connection_attempts": {
            "type": "string",
            "description": "Connection retry count before dropping serial data",
            "format": "irange(1,24)",
            "x-web": {
              "pretty": "Connection retry count",
              "input-type": "input",
              "group": "Over IP configuration",
              "depends": [
                {
                  "protocol": "0",
                  "mode": [
                    "client",
                    "client_server"
                  ],
                  "connect_on_data": "1"
                }
              ]
            }
          },
          "address_connect": {
            "type": "string",
            "description": "Specify server address and port for client to connect to. E.g 192.168.1.1:80.",
            "format": "host",
            "x-web": {
              "pretty": "Destination address",
              "input-type": "input",
              "group": "General Over IP configuration",
              "depends": [
                {
                  "mode": [
                    "client",
                    "bidirect",
                    "client_server"
                  ]
                }
              ]
            }
          },
          "recon_interval": {
            "type": "string",
            "description": "Specify intervals connection to server if it fails.",
            "format": "uinteger",
            "x-web": {
              "pretty": "Reconnect interval",
              "input-type": "input",
              "group": "Advanced Over IP configuration",
              "depends": [
                {
                  "mode": [
                    "client",
                    "client_server",
                    "bidirect"
                  ],
                  "protocol": "0"
                }
              ]
            }
          },
          "keepalive_time": {
            "type": "string",
            "description": "The interval between last data packet sent",
            "format": "irange(0, 32000)",
            "x-web": {
              "pretty": "Keep alive time",
              "input-type": "input",
              "group": "Advanced Over IP configuration",
              "depends": [
                {
                  "protocol": "0"
                }
              ]
            }
          },
          "keepalive_interval": {
            "type": "string",
            "description": "The interval between subsequential keepalive probes",
            "format": "irange(0, 32000)",
            "x-web": {
              "pretty": "Keep alive interval",
              "input-type": "input",
              "group": "Advanced Over IP configuration",
              "depends": [
                {
                  "protocol": "0"
                }
              ]
            }
          },
          "keepalive_probes": {
            "type": "string",
            "description": "The number of unacknowledged probes",
            "format": "irange(0, 32000)",
            "x-web": {
              "pretty": "Keep alive probes",
              "input-type": "input",
              "group": "Advanced Over IP configuration",
              "depends": [
                {
                  "protocol": "0"
                }
              ]
            }
          },
          "port_listen": {
            "type": "string",
            "description": "Specify port number for server to listen.",
            "format": "port",
            "x-web": {
              "pretty": "Port",
              "input-type": "input",
              "group": "Advanced Over IP configuration",
              "depends": [
                {
                  "mode": [
                    "server",
                    "client_server",
                    "bidirect"
                  ]
                }
              ]
            }
          },
          "tcp_echo_enabled": {
            "type": "string",
            "description": "Enable software TCP echo.",
            "format": "is_bool",
            "enum": [
              "0",
              "1"
            ],
            "x-web": {
              "pretty": "TCP echo",
              "input-type": "switch",
              "group": "Advanced Over IP configuration",
              "depends": [
                {
                  "protocol": "0"
                }
              ]
            }
          },
          "cd_enable": {
            "type": "string",
            "description": "Enable connection indication on CD pin.",
            "format": "is_bool",
            "enum": [
              "0",
              "1"
            ],
            "x-web": {
              "pretty": "CD enable",
              "input-type": "switch",
              "group": "Advanced Over IP configuration",
              "hw_tags": {
                "pin_inversion": true
              },
              "depends": [
                {
                  "mode": [
                    "server",
                    "client"
                  ],
                  "protocol": "0",
                  "device": "/dev/rs232"
                }
              ]
            }
          },
          "dsr_enable": {
            "type": "string",
            "description": "Enable connection indication on DSR pin.",
            "format": "is_bool",
            "enum": [
              "0",
              "1"
            ],
            "x-web": {
              "pretty": "DSR enable",
              "input-type": "switch",
              "group": "Advanced Over IP configuration",
              "hw_tags": {
                "pin_inversion": true
              },
              "depends": [
                {
                  "mode": [
                    "server",
                    "client"
                  ],
                  "protocol": "0",
                  "device": "/dev/rs232"
                }
              ]
            }
          },
          "cd_invert": {
            "type": "string",
            "description": "Invert default CD pin level for indication.",
            "format": "is_bool",
            "enum": [
              "0",
              "1"
            ],
            "x-web": {
              "pretty": "CD invert",
              "input-type": "switch",
              "group": "Advanced Over IP configuration",
              "hw_tags": {
                "pin_inversion": true
              },
              "depends": [
                {
                  "mode": [
                    "server",
                    "client"
                  ],
                  "protocol": "0",
                  "device": "/dev/rs232",
                  "cd_enable": "1"
                }
              ]
            }
          },
          "dsr_invert": {
            "type": "string",
            "description": "Invert default DSR pin level for indication.",
            "format": "is_bool",
            "enum": [
              "0",
              "1"
            ],
            "x-web": {
              "pretty": "DSR invert",
              "input-type": "switch",
              "group": "Advanced Over IP configuration",
              "hw_tags": {
                "pin_inversion": true
              },
              "depends": [
                {
                  "mode": [
                    "server",
                    "client"
                  ],
                  "protocol": "0",
                  "device": "/dev/rs232",
                  "dsr_enable": "1"
                }
              ]
            }
          },
          "predefined_address": {
            "type": "string",
            "description": "Set predefined IP and port for UDP connection. E.g 192.168.1.1:80",
            "x-web": {
              "pretty": "Predefined addresses",
              "input-type": "input",
              "group": "General Over IP configuration",
              "depends": [
                {
                  "mode": [
                    "server",
                    "client_server"
                  ],
                  "protocol": "1"
                }
              ]
            }
          },
          "use_tls": {
            "type": "string",
            "format": "is_bool",
            "enum": [
              "0",
              "1"
            ],
            "description": "Enable to use TLS/SSL for connection",
            "x-web": {
              "pretty": "Use TLS/SSL",
              "input-type": "switch",
              "group": "Security"
            }
          },
          "tls_type": {
            "type": "string",
            "enum": [
              "cert",
              "psk"
            ],
            "description": "Select the type of TLS encryption",
            "x-web": {
              "pretty": "TLS type",
              "input-type": "select",
              "group": "Security",
              "enum-pretty": {
                "cert": "Certificate based",
                "psk": "Pre-Shared-Key based"
              },
              "depends": [
                {
                  "use_tls": "1"
                }
              ]
            }
          },
          "tls_version": {
            "type": "string",
            "description": "Minimum TLS version allowed to be used",
            "default": "all",
            "x-web": {
              "pretty": "TLS version",
              "input-type": "select",
              "group": "Security",
              "depends": [
                {
                  "use_tls": "1"
                }
              ],
              "enum-depends": [
                {
                  "depends": {
                    "protocol": "0"
                  },
                  "values": [
                    "tlsv1.0",
                    "tlsv1.1",
                    "tlsv1.2",
                    "tlsv1.3",
                    "all"
                  ]
                },
                {
                  "depends": {
                    "protocol": "1"
                  },
                  "values": [
                    "dtlsv1.0",
                    "dtlsv1.2",
                    "all"
                  ]
                }
              ],
              "enum-pretty": {
                "all": "Support all"
              }
            }
          },
          "require_certificate": {
            "type": "string",
            "format": "is_bool",
            "enum": [
              "0",
              "1"
            ],
            "description": "Demand certificate and key from peer and verify them against certificate authority",
            "x-web": {
              "pretty": "Require certificate",
              "input-type": "switch",
              "group": "Security",
              "depends": [
                {
                  "use_tls": "1"
                }
              ]
            }
          },
          "verify_host": {
            "type": "string",
            "format": "is_bool",
            "enum": [
              "0",
              "1"
            ],
            "description": "Check if the server certificates Common Name (CN) matches hostname to which client is connecting",
            "x-web": {
              "pretty": "Verify host",
              "input-type": "switch",
              "group": "Security",
              "depends": [
                {
                  "use_tls": "1",
                  "mode": [
                    "client",
                    "bidirect",
                    "client_server"
                  ]
                }
              ]
            }
          },
          "_device_sec_files": {
            "type": "string",
            "enum": [
              "0",
              "1"
            ],
            "description": "Choose this option if you want to select certificate files from device."
          },
          "ca_file": {
            "type": "string",
            "description": "Upload CA file",
            "format": "path",
            "x-web": {
              "pretty": "CA file",
              "input-type": "input",
              "group": "Security",
              "depends": [
                {
                  "tls_type": "cert",
                  "require_certificate": "1",
                  "use_tls": "1"
                }
              ]
            }
          },
          "cert_file": {
            "type": "string",
            "description": "Upload certificate file",
            "format": "path",
            "x-web": {
              "pretty": "Certificate file",
              "input-type": "input",
              "group": "Security",
              "depends": [
                {
                  "tls_type": "cert",
                  "use_tls": "1"
                }
              ]
            }
          },
          "key_file": {
            "type": "string",
            "description": "Upload key file",
            "format": "path",
            "x-web": {
              "pretty": "Key file",
              "input-type": "input",
              "group": "Security",
              "depends": [
                {
                  "tls_type": "cert",
                  "use_tls": "1"
                }
              ]
            }
          },
          "psk": {
            "type": "string",
            "description": "The pre-shared-key in hex format with no leading 0x",
            "format": "['no_prefix(\"0x\")', 'hexstring']",
            "maxLength": 128,
            "writeOnly": true,
            "x-web": {
              "pretty": "Pre-Shared-Key",
              "input-type": "input",
              "group": "Security",
              "depends": [
                {
                  "tls_type": "psk",
                  "use_tls": "1"
                }
              ]
            }
          },
          "identity": {
            "type": "string",
            "description": "Specify the Identity",
            "format": "uciname",
            "x-web": {
              "pretty": "Identity",
              "input-type": "input",
              "group": "Security",
              "depends": [
                {
                  "tls_type": "psk",
                  "use_tls": "1"
                }
              ]
            }
          }
        },
        "required": [
          "device"
        ]
      },
      "overip_options_get": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "psk": {
                "type": "string",
                "description": "The pre-shared-key in hex format with no leading 0x",
                "enum": [
                  "set",
                  "unset"
                ],
                "x-web": {
                  "pretty": "Pre-Shared-Key",
                  "input-type": "input",
                  "group": "Security",
                  "depends": [
                    {
                      "tls_type": "psk",
                      "use_tls": "1"
                    }
                  ]
                }
              }
            },
            "required": [
              "id",
              "device"
            ]
          },
          {
            "$ref": "#/components/schemas/overip_single_options"
          }
        ]
      },
      "overip_options_edit": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "psk": {
                "type": "string",
                "description": "The pre-shared-key in hex format with no leading 0x",
                "format": "['no_prefix(\"0x\")', 'hexstring']",
                "maxLength": 128,
                "x-web": {
                  "pretty": "Pre-Shared-Key",
                  "input-type": "input",
                  "group": "Security",
                  "depends": [
                    {
                      "tls_type": "psk",
                      "use_tls": "1"
                    }
                  ]
                }
              }
            },
            "required": [
              "id",
              "device"
            ]
          },
          {
            "$ref": "#/components/schemas/overip_single_options"
          }
        ]
      },
      "overip_options_all_get": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "OverIP Configuration identifier (ID)."
              }
            },
            "required": [
              "id",
              "device"
            ]
          },
          {
            "$ref": "#/components/schemas/overip_options_get"
          }
        ]
      },
      "overip_options_all_edit": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "OverIP Configuration identifier (ID)."
              }
            },
            "required": [
              "id",
              "device"
            ]
          },
          {
            "$ref": "#/components/schemas/overip_options_edit"
          }
        ]
      }
    }
  }
}