{
  "openapi": "3.0.0",
  "tags": [],
  "paths": {
    "/snmp/trap/config": {
      "summary": "Modify trap rule",
      "description": "This section is used to configure the settings of the SNMP trap rule. Scroll your mouse pointer over field names in order to see helpful hints.",
      "get": {
        "tags": ["Trap Rules"],
        "summary": "Returns all SNMP Trap Rules configurations",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200snmp_trap_rules_multi"
          }
        }
      },
      "post": {
        "tags": ["Trap Rules"],
        "summary": "Creates a new SNMP Trap Rules configuration",
        "responses": {
          "201": {
            "$ref": "#/components/responses/200snmp_trap_rules"
          },
          "422": {
            "$ref": "#/components/responses/422response"
          }
        },
        "requestBody": {
          "description": "Data of configuration options which be created",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/snmp_trap_rules_options"
                  }
                },
                "required": ["data"]
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Trap Rules"],
        "summary": "Updates the specified SNMP Trap Rules configurations",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200snmp_trap_rules_multi"
          },
          "404": {
            "$ref": "#/components/responses/404response"
          },
          "422": {
            "$ref": "#/components/responses/422response"
          }
        },
        "requestBody": {
          "description": "Data to update configurations",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "description": "Array of configurations to update",
                    "items": {
                      "$ref": "#/components/schemas/snmp_trap_rules_options_id"
                    }
                  }
                },
                "required": ["data"]
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Trap Rules"],
        "summary": "Deletes the specified SNMP Trap Rules configurations",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200deleted_multi"
          },
          "404": {
            "$ref": "#/components/responses/404response"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/delete_multi"
        }
      },
      "x-web": {
        "menu": ["Services", "SNMP", "Trap Settings"],
        "hw_tags": {
          "is_access_point": false,
          "is_switch": false
        },
        "name": "SNMP"
      }
    },
    "/snmp/trap/config/{id}": {
      "summary": "Modify trap rule",
      "description": "This section is used to configure the settings of the SNMP trap rule. Scroll your mouse pointer over field names in order to see helpful hints.",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "SNMP Trap Rules instance identifier (ID)."
        }
      ],
      "get": {
        "tags": ["Trap Rules"],
        "summary": "Returns the specified SNMP Trap Rules configuration",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200snmp_trap_rules"
          },
          "404": {
            "$ref": "#/components/responses/404response"
          }
        }
      },
      "put": {
        "tags": ["Trap Rules"],
        "summary": "Updates the specified SNMP Trap Rules configuration",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200snmp_trap_rules"
          },
          "404": {
            "$ref": "#/components/responses/404response"
          },
          "422": {
            "$ref": "#/components/responses/422response"
          }
        },
        "requestBody": {
          "description": "Update specified configuration options",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/snmp_trap_rules_options"
                  }
                },
                "required": ["data"]
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Trap Rules"],
        "summary": "Deletes the specified SNMP Trap Rules configuration",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200deleted"
          },
          "404": {
            "$ref": "#/components/responses/404response"
          }
        }
      },
      "x-web": {
        "menu": ["Services", "SNMP", "Trap Settings"],
        "hw_tags": {
          "is_access_point": false,
          "is_switch": false
        },
        "name": "SNMP"
      }
    }
  },
  "components": {
    "responses": {
      "200snmp_trap_rules": {
        "description": "Returns configuration",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "description": "Operation status",
                  "type": "boolean"
                },
                "data": {
                  "$ref": "#/components/schemas/snmp_trap_rules_options_id"
                }
              },
              "required": ["success", "data"]
            }
          }
        }
      },
      "200snmp_trap_rules_multi": {
        "description": "Returns configurations",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "description": "Operation status",
                  "type": "boolean"
                },
                "data": {
                  "type": "array",
                  "description": "Array of configurations objects",
                  "items": {
                    "$ref": "#/components/schemas/snmp_trap_rules_options_id"
                  }
                }
              },
              "required": ["success", "data"]
            }
          }
        }
      }
    },
    "schemas": {
      "snmp_trap_rules_options": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "string",
            "description": "Enable SNMP trap rule.",
            "format": "is_bool",
            "enum": ["0", "1"],
            "x-web": {
              "pretty": "Enable",
              "input-type": "switch"
            }
          },
          "type": {
            "type": "string",
            "enum": ["gsm", "iotrap", "eventtrap", "chilli"],
            "description": "Trap type",
            "x-web": {
              "pretty": "Trap type",
              "input-type": "select",
              "enum-pretty": {
                "gsm": "GSM",
                "iotrap": "Input/Output",
                "eventtrap": "Events log",
                "chilli": "Hotspot client"
              },
              "enum-depends": [
                {
                  "hw_tags": {
                    "mobile": true,
                    "ios": true
                  },
                  "values": ["gsm", "iotrap", "eventtrap", "chilli"]
                },
                {
                  "hw_tags": {
                    "mobile": false,
                    "ios": true
                  },
                  "values": ["iotrap", "eventtrap", "chilli"]
                },
                {
                  "hw_tags": {
                    "mobile": true,
                    "ios": false
                  },
                  "values": ["gsm", "eventtrap", "chilli"]
                },
                {
                  "hw_tags": {
                    "mobile": false,
                    "ios": false
                  },
                  "values": ["eventtrap", "chilli"]
                }
              ],
              "unique": true
            }
          },
          "modem": {
            "type": "string",
            "description": "Trap will be set for selected modem.",
            "x-web": {
              "pretty": "Modem",
              "input-type": "select",
              "hw_tags": {
                "dual_modem": true
              },
              "depends": [
                {
                  "type": "gsm"
                }
              ],
              "enum-pretty": {
                "$ref": "#/x-schemas/modem_names"
              },
              "enum-depends": {
                "$ref": "#/x-schemas/modem_select"
              }
            }
          },
          "name": {
            "type": "string",
            "description": "The trigger which invokes the rule.",
            "x-web": {
              "pretty": "Trigger",
              "input-type": "select",
              "enum-depends": [
                {
                  "depends": {
                    "type": "gsm"
                  },
                  "values": ["signalstrtrap", "conntypetrap"]
                },
                {
                  "depends": {
                    "type": "chilli"
                  },
                  "values": ["connectedtrap", "disconnectedtrap"]
                },
                {
                  "hw_tags": {
                    "din1": true,
                    "din2": true,
                    "dout1": true,
                    "dout2": true,
                    "dio0": false,
                    "dio1": false,
                    "dio2": false,
                    "iio": true,
                    "relay0": true,
                    "relay1": false,
                    "adc0": true,
                    "acl0": true,
                    "dwi0": false,
                    "dwi1": false
                  },
                  "values": ["din1", "din2", "dout1", "dout2", "iio", "relay0", "adc0", "acl0"],
                  "depends": { "type": "iotrap" }
                },
                {
                  "hw_tags": {
                    "din1": true,
                    "din2": false,
                    "dout1": true,
                    "dout2": false,
                    "dio0": false,
                    "dio1": false,
                    "dio2": false,
                    "iio": false,
                    "relay0": false,
                    "relay1": false,
                    "adc0": false,
                    "acl0": false,
                    "dwi0": false,
                    "dwi1": false
                  },
                  "values": ["din1", "dout1"],
                  "depends": { "type": "iotrap" }
                },
                {
                  "hw_tags": {
                    "din1": false,
                    "din2": false,
                    "dout1": false,
                    "dout2": false,
                    "dio0": true,
                    "dio1": true,
                    "dio2": true,
                    "iio": false,
                    "relay0": false,
                    "relay1": false,
                    "adc0": true,
                    "acl0": false,
                    "dwi0": false,
                    "dwi1": false
                  },
                  "values": ["dio0", "dio1", "dio2", "adc0"],
                  "depends": { "type": "iotrap" }
                },
                {
                  "hw_tags": {
                    "din1": false,
                    "din2": false,
                    "dout1": false,
                    "dout2": false,
                    "dio0": true,
                    "dio1": true,
                    "dio2": true,
                    "iio": false,
                    "relay0": false,
                    "relay1": false,
                    "adc0": false,
                    "acl0": false,
                    "dwi0": false,
                    "dwi1": false
                  },
                  "values": ["dio0", "dio1", "dio2"],
                  "depends": { "type": "iotrap" }
                },
                {
                  "hw_tags": {
                    "din1": false,
                    "din2": false,
                    "dout1": false,
                    "dout2": false,
                    "dio0": true,
                    "dio1": true,
                    "dio2": false,
                    "iio": true,
                    "relay0": true,
                    "relay1": true,
                    "adc0": true,
                    "acl0": true,
                    "dwi0": true,
                    "dwi1": true
                  },
                  "values": ["dio0", "dio1", "iio", "relay0", "relay1", "adc0", "acl0", "dwi0", "dwi1"],
                  "depends": { "type": "iotrap" }
                },
                {
                  "hw_tags": {
                    "din1": false,
                    "din2": false,
                    "dout1": false,
                    "dout2": false,
                    "dio0": true,
                    "dio1": true,
                    "dio2": false,
                    "iio": false,
                    "relay0": false,
                    "relay1": false,
                    "adc0": false,
                    "acl0": false,
                    "dwi0": false,
                    "dwi1": false
                  },
                  "values": ["dio0", "dio1"],
                  "depends": { "type": "iotrap" }
                }
              ],
              "enum-pretty": {
                "signalstrtrap": "Signal strength",
                "conntypetrap": "Network type",
                "connectedtrap": "Connected",
                "disconnectedtrap": "Disconnected"
              }
            }
          },
          "signal": {
            "type": "string",
            "description": "GSM signal strength value. If the routers signal strength falls below this threshold it will trigger the SNMP trap.",
            "format": "irange(-130, 0)",
            "x-web": {
              "pretty": "Signal strength",
              "input-type": "input",
              "depends": [
                {
                  "name": "signalstrtrap"
                }
              ]
            }
          },
          "state": {
            "type": "string",
            "enum": ["active", "inactive", "open", "closed", "rising", "falling", "both", "in_range", "out_of_range"],
            "description": "Selects which pin state will trigger the SNMP trap.",
            "x-web": {
              "pretty": "State change",
              "input-type": "select",
              "depends": [
                {
                  "name": "iotrap"
                }
              ],
              "enum-depends": [
                {
                  "depends": {
                    "name": ["din1", "din2", "dout1", "dout2", "iio", "dio0", "dio1", "dio2"]
                  },
                  "values": ["both", "active", "inactive"]
                },
                {
                  "depends": {
                    "name": ["relay0", "relay1"]
                  },
                  "values": ["both", "open", "closed"]
                },
                {
                  "depends": {
                    "name": ["dwi0", "dwi1"]
                  },
                  "values": ["both", "rising", "falling"]
                },
                {
                  "depends": {
                    "name": ["adc0", "acl0"]
                  },
                  "values": ["both", "in_range", "out_of_range"]
                }
              ],
              "enum-pretty": {
                "active": "High level",
                "inactive": "Low level",
                "open": "Open",
                "closed": "Closed",
                "rising": "Rising",
                "falling": "Falling",
                "both": "Both",
                "in_range": "In range",
                "out_of_range": "Out of range"
              }
            }
          },
          "from": {
            "type": "string",
            "description": "Specifies minimum voltage/current of the range.",
            "format": "ufloat",
            "x-web": {
              "pretty": "Min voltage/current",
              "input-type": "input",
              "depends": [
                {
                  "name": ["adc0", "acl0"]
                }
              ]
            }
          },
          "to": {
            "type": "string",
            "description": "Specifies maximum voltage/current of the range.",
            "format": "ufloat",
            "x-web": {
              "pretty": "Max voltage/current",
              "input-type": "input",
              "depends": [
                {
                  "name": ["adc0", "acl0"]
                }
              ]
            }
          },
          "event": {
            "type": "string",
            "description": "Event that will trigger the rule",
            "enum": ["Config", "DHCP", "Reboot", "Startup", "SSH", "Web UI", "WiFi", "Mobile Data", "Failover", "SMS", "Signal strength", "SIM switch", "Switch Events", "Switch Topology", "GPS"],
            "x-web": {
              "pretty": "Event type",
              "input-type": "select",
              "depends": [
                {
                  "type": "eventtrap"
                }
              ],
              "enum-pretty": {
                "$ref": "#/x-schemas/event_names"
              },
              "unique": true
            }
          },
          "eventMark": {
            "type": "string",
            "description": "More specific event type that will trigger the rule",
            "x-web": {
              "pretty": "Event subtype",
              "input-type": "select",
              "depends": [
                {
                  "type": "eventtrap"
                }
              ],
              "enum-depends": {
                "$ref": "#/x-schemas/event_mark_select"
              },
              "enum-pretty": {
                "$ref": "#/x-schemas/event_mark_names"
              },
              "unique": true
            }
          }
        }
      },
      "snmp_trap_rules_options_id": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "SNMP Trap Rules Configuration identifier (ID)."
              }
            }
          },
          {
            "$ref": "#/components/schemas/snmp_trap_rules_options"
          }
        ],
        "required": ["id"]
      }
    }
  }
}
