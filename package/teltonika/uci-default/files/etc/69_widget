#!/bin/sh

. /lib/functions.sh

CONFIG="widget"
MOBILE_CONFIG="/etc/config/simcard"
RMS_CONFIG="/etc/config/rms_mqtt"
WIFI_CONFIG="/etc/config/wireless"
ETHERNET=$(uci_get network @switch[0] name)
position=1
radio0_network=1
radio1_network=1
isTAP="$(mnf_info --name | grep -q 'TAP[0-9]00' || echo false)"

check_widgets() {
	local widget="$1"
	local type
	config_get type "$widget" "type"
	eval export ${type}_widget_exists=1
}

setup_widget() {
	local id="$1"
	local enabled="$2"
	local type="$3"

	uci_add "$CONFIG" "$CONFIG"
	local new_section="$CONFIG_SECTION"

	uci_set "$CONFIG" "$new_section" "id" "$id"
	uci_set "$CONFIG" "$new_section" "type" "$type"
	uci_set "$CONFIG" "$new_section" "position" "$position"
	uci_set "$CONFIG" "$new_section" "enabled" "$enabled"

	uci_commit "$CONFIG"
	position=$((position + 1))
}

setup_wifi() {
	local iface_section="$1"
	local enabled="$2"
	local device id
	config_get device "$iface_section" "device"
	
	if [ "$device" = "radio0" ]; then
		id="${device}.network${radio0_network}"
		radio0_network=$((radio0_network + 1))
	elif [ "$device" = "radio1" ]; then
		id="${device}.network${radio1_network}"
		radio1_network=$((radio1_network + 1))
	fi

	setup_widget "$id" "$enabled" "wifi"
}

$isTAP && exit 0

touch "/etc/config/${CONFIG}"
config_load "$CONFIG"
config_foreach check_widgets "$CONFIG"

[ "$ethernet_widget_exists" = "1" ] || {
	[ -n "$ETHERNET" ] && setup_widget "widget1" "1" "ethernet"
}

[ "$mobile_widget_exists" = "1" ] || {
	[ -s "$MOBILE_CONFIG" ] && [ -f "$MOBILE_CONFIG" ] && {
		modem_count=$(jsonfilter -q -i /etc/board.json  -e '@["modems"][*]' | wc -l)

		for i in $(seq "$modem_count"); do
			setup_widget "mobile-widget${i}" "1" "mobile"
		done
	}
}

[ "$system_widget_exists" = "1" ] || {
	setup_widget "widget3" "1" "system"
}

[ "$wifi_widget_exists" = "1" ] || {
	[ -f "$WIFI_CONFIG" ] && {
		config_load wireless
		config_foreach setup_wifi "wifi-iface" "1"
	}
}

[ "$rms_widget_exists" = "1" ] || {
	[ -f "$RMS_CONFIG" ] && setup_widget "widget5" "1" "rms"
}

index=1

add_index() {
	[ "${1:0:3}" != "cfg" ] && return

	uci_rename "$CONFIG" "$1" "$index"
	index=$((index + 1))
}

config_load "$CONFIG" # Reload config just in case
config_foreach add_index "widget"
uci_commit "$CONFIG"

exit 0
