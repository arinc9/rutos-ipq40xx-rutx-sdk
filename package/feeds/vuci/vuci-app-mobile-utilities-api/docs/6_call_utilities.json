{
  "openapi": "3.0.0",
  "info": {
    "title": "Call Utilities",
    "version": "1.0",
    "description": "Call Utilities API documentation."
  },
  "paths": {
    "/call_utilities/global": {
      "get": {
        "summary": "Returns the Call Utilities Global Configuration",
        "tags": ["Global"],
        "responses": {
          "200": {
            "$ref": "#/components/responses/call_general_one"
          }
        }
      },
      "put": {
        "summary": "Updates the Call Utilities Global configuration",
        "tags": ["Global"],
        "responses": {
          "200": {
            "$ref": "#/components/responses/call_general_one"
          },
          "422": {
            "$ref": "#/components/responses/422response"
          }
        },
        "description": "Updates Call Utilities Global configuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/req_body_call_general_one"
              }
            }
          }
        }
      },
      "x-web": {
        "menu": ["Services", "Mobile Utilities", "Call Utilities"],
        "hw_tags": {
          "mobile": true,
          "is_access_point": false,
          "modem_low_power": false,
          "modem_data_only": false
        },
        "name": "Call Utilities"
      }
    },
    "/call_utilities/rules/options": {
      "get": {
        "summary": "Returns Call Utilities options",
        "tags": ["Rules"],
        "responses": {
          "200": {
            "$ref": "#/components/responses/call_rules_options"
          }
        }
      },
      "x-web": {
        "menu": ["Services", "Mobile Utilities", "Call Utilities"],
        "hw_tags": {
          "mobile": true,
          "is_access_point": false,
          "modem_low_power": false,
          "modem_data_only": false
        },
        "name": "Call Utilities"
      }
    },
    "/call_utilities/rules/config": {
      "get": {
        "summary": "Returns all Call Utilities Rules configurations",
        "tags": ["Rules"],
        "responses": {
          "200": {
            "$ref": "#/components/responses/call_rules_many"
          }
        }
      },
      "post": {
        "summary": "Creates a new Call Utilities rule configuration",
        "responses": {
          "201": {
            "$ref": "#/components/responses/call_rules_one"
          },
          "422": {
            "$ref": "#/components/responses/422response"
          }
        },
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/req_body_call_rules_one"
              }
            }
          }
        },
        "tags": ["Rules"]
      },
      "put": {
        "summary": "Updates the selected Call Utilities Rules configurations",
        "tags": ["Rules"],
        "responses": {
          "200": {
            "$ref": "#/components/responses/call_rules_many"
          },
          "404": {
            "$ref": "#/components/responses/404response"
          },
          "422": {
            "$ref": "#/components/responses/422response"
          }
        },
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/req_body_call_rules_many"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes the selected Call Utilities Rules configurations",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200deleted_multi"
          },
          "404": {
            "$ref": "#/components/responses/404response"
          }
        },
        "description": "",
        "requestBody": {
          "$ref": "#/components/requestBodies/delete_multi"
        },
        "tags": ["Rules"]
      },
      "x-web": {
        "menu": ["Services", "Mobile Utilities", "Call Utilities"],
        "hw_tags": {
          "mobile": true,
          "is_access_point": false,
          "modem_low_power": false,
          "modem_data_only": false
        },
        "name": "Call Utilities"
      }
    },
    "/call_utilities/rules/config/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "description": "Configuration ID",
          "required": true
        }
      ],
      "get": {
        "summary": "Returns the selected Call Utilities rule configuration",
        "tags": ["Rules"],
        "responses": {
          "200": {
            "$ref": "#/components/responses/call_rules_one"
          },
          "404": {
            "$ref": "#/components/responses/404response"
          }
        }
      },
      "put": {
        "summary": "Updates the selected Call Utilities rule configuration",
        "tags": ["Rules"],
        "responses": {
          "200": {
            "$ref": "#/components/responses/call_rules_one"
          },
          "404": {
            "$ref": "#/components/responses/404response"
          },
          "422": {
            "$ref": "#/components/responses/422response"
          }
        },
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/req_body_call_rules_one"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes the selected Call Utilities rule configuration",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200deleted"
          },
          "404": {
            "$ref": "#/components/responses/404response"
          }
        },
        "description": "",
        "tags": ["Rules"]
      },
      "x-web": {
        "menu": ["Services", "Mobile Utilities", "Call Utilities"],
        "hw_tags": {
          "mobile": true,
          "is_access_point": false,
          "modem_low_power": false,
          "modem_data_only": false
        },
        "name": "Call Utilities"
      }
    }
  },
  "components": {
    "schemas": {
      "call_general": {
        "description": "",
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "The action to be performed on incoming calls. Call Utilities Rules will keep getting executed while the call is active.",
            "enum": ["reject", "answer", "ignore"],
            "x-web": {
              "pretty": "Action",
              "input-type": "select",
              "enum-pretty": {
                "reject": "Reject",
                "answer": "Answer",
                "ignore": "Ignore"
              }
            }
          },
          "line_close_time": {
            "type": "string",
            "description": "Time interval (seconds) until line will be closed after answering the call. (0-100)",
            "format": "irange(0,100)",
            "x-web": {
              "pretty": "Answer and hangup after time period (s)",
              "input-type": "input",
              "depends": [
                {
                  "action": "answer"
                }
              ]
            }
          }
        },
        "required": ["action"]
      },
      "call_rules": {
        "description": "",
        "type": "object",
        "properties": {
          "enabled": {
            "type": "string",
            "description": "Turns the rule on or off.",
            "format": "is_bool",
            "enum": ["0", "1"],
            "x-web": {
              "pretty": "Enable",
              "input-type": "switch"
            }
          },
          "action": {
            "type": "string",
            "description": "Action that will happen when the rule is triggered",
            "enum": ["reboot", "send_status", "mobile", "dout", "wifi", "relay"],
            "x-web": {
              "pretty": "Action",
              "input-type": "select",
              "enum-depends": [
                {
                  "hw_tags": {
                    "ios": true,
                    "wifi": true,
                    "relay0": true,
                    "relay1": false
                  },
                  "values": ["reboot", "send_status", "mobile", "dout", "wifi", "relay"]
                },
                {
                  "hw_tags": {
                    "ios": true,
                    "wifi": true,
                    "relay0": false,
                    "relay1": false
                  },
                  "values": ["reboot", "send_status", "mobile", "dout", "wifi"]
                },
                {
                  "hw_tags": {
                    "ios": true,
                    "wifi": false,
                    "relay0": true,
                    "relay1": true
                  },
                  "values": ["reboot", "send_status", "mobile", "dout", "relay"]
                },
                {
                  "hw_tags": {
                    "ios": true,
                    "wifi": false,
                    "relay0": false,
                    "relay1": false
                  },
                  "values": ["reboot", "send_status", "mobile", "dout"]
                },
                {
                  "hw_tags": {
                    "ios": false,
                    "wifi": true,
                    "relay0": false,
                    "relay1": false
                  },
                  "values": ["reboot", "send_status", "mobile", "wifi"]
                }
              ],
              "enum-pretty": {
                "reboot": "Reboot",
                "send_status": "Get status",
                "mobile": "Turn mobile data on/off",
                "dout": "Turn digital output on/off",
                "wifi": "Open/Close relays",
                "relay": "Turn WiFi on/off"
              },
              "unique": true
            }
          },
          "modem_id": {
            "type": "string",
            "description": "Modem, which is used to receive the message",
            "x-web": {
              "pretty": "Receiving modem",
              "input-type": "select",
              "hw_tags": {
                "dual_modem": true
              },
              "enum-pretty": {
                "$ref": "#/x-schemas/modem_names"
              },
              "enum-depends": {
                "$ref": "#/x-schemas/modem_select"
              }
            }
          },
          "value": {
            "type": "string",
            "description": "Indicates whether the rule should turn the service on or off.",
            "format": "is_bool",
            "enum": ["0", "1"],
            "x-web": {
              "pretty": "State",
              "input-type": "switch",
              "depends": [
                {
                  "action": ["wifi", "mobile", "dout", "relay"]
                }
              ]
            }
          },
          "write_config": {
            "type": "string",
            "description": "Indicates whether the changes will be written to config",
            "format": "is_bool",
            "enum": ["0", "1"],
            "x-web": {
              "pretty": "Write to config",
              "input-type": "switch",
              "depends": [
                {
                  "action": ["dout", "relay"]
                }
              ]
            }
          },
          "timeout": {
            "type": "string",
            "description": "Rule active for a specified time",
            "format": "is_bool",
            "enum": ["0", "1"],
            "x-web": {
              "pretty": "Active timeout",
              "input-type": "switch",
              "depends": [
                {
                  "action": ["dout", "relay"]
                }
              ]
            }
          },
          "seconds": {
            "type": "string",
            "description": "Rule active for a specified time, format seconds",
            "format": "irange(1,999999)",
            "default": "5",
            "x-web": {
              "pretty": "Seconds",
              "input-type": "input",
              "depends": [
                {
                  "timeout": "1"
                }
              ]
            }
          },
          "status_sms": {
            "type": "string",
            "description": "Receive router status information via SMS after reboot",
            "format": "is_bool",
            "enum": ["0", "1"],
            "x-web": {
              "pretty": "Get status via SMS after reboot",
              "input-type": "switch",
              "depends": [
                {
                  "action": "reboot"
                }
              ]
            }
          },
          "info_modem_id": {
            "type": "string",
            "description": "Modem id, which is used to get information from or managed for switch mobile data action",
            "x-web": {
              "pretty": "Modem",
              "input-type": "select",
              "depends": [
                {
                  "action": ["send_status", "mobile"]
                },
                {
                  "status_sms": "1"
                }
              ],
              "hw_tags": {
                "dual_modem": true
              },
              "enum-pretty": {
                "$ref": "#/x-schemas/modem_names"
              },
              "enum-depends": {
                "$ref": "#/x-schemas/modem_select"
              }
            }
          },
          "send_modem_id": {
            "type": "string",
            "description": "Modem id, which is used to send information from",
            "x-web": {
              "pretty": "Gateway modem",
              "input-type": "select",
              "depends": [
                {
                  "action": "send_status"
                },
                {
                  "status_sms": "1"
                }
              ],
              "hw_tags": {
                "dual_modem": true
              },
              "enum-pretty": {
                "$ref": "#/x-schemas/modem_names"
              },
              "enum-depends": {
                "$ref": "#/x-schemas/modem_select"
              }
            }
          },
          "write_wifi": {
            "type": "string",
            "description": "Indicates whether the action should save the changed wireless state permanently by writing a new value into the wireless configuration. When turned off, the rule will switch the state temporarily meaning what WiFi will return to its previous state if the device or the wireless service restarts",
            "format": "is_bool",
            "enum": ["0", "1"],
            "x-web": {
              "pretty": "Write to config",
              "input-type": "switch",
              "depends": [
                {
                  "action": "wifi"
                }
              ]
            }
          },
          "write_mobile": {
            "type": "string",
            "description": "Permanently save mobile network state to configuration",
            "format": "is_bool",
            "enum": ["0", "1"],
            "x-web": {
              "pretty": "Write to config",
              "input-type": "switch",
              "depends": [
                {
                  "action": "mobile"
                }
              ]
            }
          },
          "message": {
            "type": "string",
            "description": "Compose the contents of the 'status' message. Use the helpers found below this field if you wish to include more router information. e.g., if you include the code %ss in the text, it will be replaced with the router's current signal strength value when the message is sent to the recipient(s).",
            "default": "Router name - %rn; WAN IP - %wi; Data Connection state - %cs; Network type - %ct; Signal strength - %ss;",
            "maxLength": 459,
            "format": "string",
            "x-web": {
              "pretty": "Message text",
              "input-type": "input",
              "depends": [
                {
                  "action": "send_status"
                },
                {
                  "status_sms": "1"
                }
              ]
            }
          },
          "pin": {
            "type": "string",
            "description": "The output or relay which will be changed",
            "enum": ["dio0", "dio1", "dio2", "dout2", "dout1", "relay1", "relay0"],
            "x-web": {
              "pretty": "Output/Relay",
              "input-type": "select",
              "depends": [
                {
                  "action": ["relay", "dout"]
                }
              ],
              "enum-depends": [
                {
                  "hw_tags": {
                    "dio0": true,
                    "dio1": true,
                    "dio2": true,
                    "dout2": false,
                    "dout1": false,
                    "relay1": false,
                    "relay0": false
                  },
                  "values": ["dio0", "dio1", "dio2"],
                  "depends": {
                    "action": "dout"
                  }
                },
                {
                  "hw_tags": {
                    "dio0": true,
                    "dio1": true,
                    "dio2": false,
                    "dout2": false,
                    "dout1": false,
                    "relay1": true,
                    "relay0": true
                  },
                  "values": ["dio0", "dio1"],
                  "depends": {
                    "action": "dout"
                  }
                },
                {
                  "hw_tags": {
                    "dio0": true,
                    "dio1": true,
                    "dio2": false,
                    "dout2": false,
                    "dout1": false,
                    "relay1": true,
                    "relay0": true
                  },
                  "values": ["relay1", "relay0"],
                  "depends": {
                    "action": "relay"
                  }
                },
                {
                  "hw_tags": {
                    "dio0": true,
                    "dio1": true,
                    "dio2": false,
                    "dout2": false,
                    "dout1": false,
                    "relay1": false,
                    "relay0": false
                  },
                  "values": ["dio0", "dio1"],
                  "depends": {
                    "action": "dout"
                  }
                },
                {
                  "hw_tags": {
                    "dio0": false,
                    "dio1": false,
                    "dio2": false,
                    "dout2": true,
                    "dout1": true,
                    "relay1": false,
                    "relay0": true
                  },
                  "values": ["dout2", "dout1"],
                  "depends": {
                    "action": "dout"
                  }
                },
                {
                  "hw_tags": {
                    "dio0": false,
                    "dio1": false,
                    "dio2": false,
                    "dout2": true,
                    "dout1": true,
                    "relay1": false,
                    "relay0": true
                  },
                  "values": ["relay0"],
                  "depends": {
                    "action": "relay"
                  }
                },
                {
                  "hw_tags": {
                    "dio0": false,
                    "dio1": false,
                    "dio2": false,
                    "dout2": false,
                    "dout1": true,
                    "relay1": false,
                    "relay0": false
                  },
                  "values": ["dout1"],
                  "depends": {
                    "action": "dout"
                  }
                }
              ]
            }
          },
          "allowed_phone": {
            "type": "string",
            "description": "Which users (based on phone numbers) are allowed to trigger the rule",
            "enum": ["all", "group", "single"],
            "x-web": {
              "pretty": "Allowed users",
              "input-type": "select",
              "enum-pretty": {
                "all": "From all numbers",
                "group": "From group",
                "single": "From single number"
              }
            }
          },
          "tel": {
            "type": "string",
            "description": "A whitelisted phone number",
            "format": "phonedigit",
            "x-web": {
              "pretty": "Caller's phone number",
              "input-type": "input",
              "depends": [
                {
                  "allowed_phone": "single"
                }
              ]
            }
          },
          "group": {
            "type": "string",
            "description": "A list of whitelisted phone numbers",
            "x-web": {
              "pretty": "Phone group",
              "input-type": "select",
              "depends": [
                {
                  "allowed_phone": "group"
                }
              ]
            }
          }
        }
      },
      "req_body_call_general_one": {
        "description": "",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/call_general"
          }
        },
        "required": ["data"]
      },
      "req_body_call_rules_one": {
        "description": "",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/call_rules"
          }
        },
        "required": ["data"]
      },
      "req_body_call_rules_many": {
        "description": "",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": ["id"]
                },
                {
                  "$ref": "#/components/schemas/call_rules"
                }
              ]
            }
          }
        },
        "required": ["data"]
      }
    },
    "responses": {
      "call_general_one": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Operation status"
                },
                "data": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/call_general"
                    }
                  ]
                }
              },
              "required": ["success", "data"]
            }
          }
        }
      },
      "call_rules_one": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Operation status"
                },
                "data": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/call_rules"
                    }
                  ],
                  "required": ["id"]
                }
              },
              "required": ["success", "data"]
            }
          }
        }
      },
      "call_rules_many": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Operation status"
                },
                "data": {
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": ["id"]
                      },
                      {
                        "$ref": "#/components/schemas/call_rules"
                      }
                    ]
                  }
                }
              },
              "required": ["success", "data"]
            }
          }
        }
      },
      "call_rules_options": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Operation status"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "actions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "params": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/device_param"
                      }
                    }
                  },
                  "required": ["actions", "params"]
                }
              },
              "required": ["success", "data"]
            }
          }
        }
      }
    }
  }
}
